syntax = "proto3";

package j5.registry.github.v1;

import "buf/validate/validate.proto";
import "j5/ext/v1/annotations.proto";
import "j5/list/v1/annotations.proto";
import "j5/state/v1/metadata.proto";

option go_package = "github.com/pentops/registry/internal/gen/j5/registry/github/v1/github_pb";

message RepoKeys {
  option (j5.ext.v1.psm).entity_name = "repo";

  string owner = 1 [
    (buf.validate.field).required = true,
    (j5.ext.v1.key).primary_key = true
  ];

  string name = 2 [
    (buf.validate.field).required = true,
    (j5.ext.v1.key).primary_key = true
  ];
}

message RepoState {
  j5.state.v1.StateMetadata metadata = 1 [(buf.validate.field).required = true];

  RepoKeys keys = 2 [
    (j5.ext.v1.field).message.flatten = true,
    (buf.validate.field).required = true
  ];

  RepoStatus status = 3 [(j5.list.v1.field).enum.filtering = {
    filterable: true
    default_filters: ["REPO_STATUS_ACTIVE"]
  }];

  RepoStateData data = 4;
}

message RepoStateData {
  bool checks_enabled = 1;
  repeated Branch branches = 2;
}

enum RepoStatus {
  REPO_STATUS_UNSPECIFIED = 0;
  REPO_STATUS_ACTIVE = 1;
}

message RepoEvent {
  j5.state.v1.EventMetadata metadata = 1 [(buf.validate.field).required = true];
  RepoKeys keys = 2 [
    (j5.ext.v1.field).message.flatten = true,
    (buf.validate.field).required = true
  ];
  RepoEventType event = 3 [(buf.validate.field).required = true];
}

message RepoEventType {
  oneof type {
    option (j5.list.v1.oneof).filtering.filterable = true;

    Configure configure = 1;

    ConfigureBranch configure_branch = 2;
    RemoveBranch remove_branch = 3;
  }

  message Configure {
    // Enables Github Build Check Runs for the repo. Token must have write access.
    bool checks_enabled = 1;

    // True: adds any config to existing config, False: Replaces all configs.
    bool merge = 2;

    repeated Branch branches = 3;
  }

  message ConfigureBranch {
    Branch branch = 1 [(buf.validate.field).required = true];
  }

  message RemoveBranch {
    string branch_name = 1 [(buf.validate.field).required = true];
  }
}

message Branch {
  string branch_name = 1 [(buf.validate.field).required = true];

  repeated DeployTargetType deploy_targets = 2 [(buf.validate.field).required = true];
}

message DeployTargetType {
  oneof type {
    J5Build j5_build = 1;
    O5Build o5_build = 2;
  }

  message J5Build {}

  message O5Build {
    string environment = 1;
  }
}
