// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: j5/registry/github/v1/repo.proto

package github_pb

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/pentops/j5/gen/j5/ext/v1/ext_j5pb"
	_ "github.com/pentops/j5/gen/j5/list/v1/list_j5pb"
	psm_pb "github.com/pentops/protostate/gen/state/v1/psm_pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RepoStatus int32

const (
	RepoStatus_REPO_STATUS_UNSPECIFIED RepoStatus = 0
	RepoStatus_REPO_STATUS_ACTIVE      RepoStatus = 1
)

// Enum value maps for RepoStatus.
var (
	RepoStatus_name = map[int32]string{
		0: "REPO_STATUS_UNSPECIFIED",
		1: "REPO_STATUS_ACTIVE",
	}
	RepoStatus_value = map[string]int32{
		"REPO_STATUS_UNSPECIFIED": 0,
		"REPO_STATUS_ACTIVE":      1,
	}
)

func (x RepoStatus) Enum() *RepoStatus {
	p := new(RepoStatus)
	*p = x
	return p
}

func (x RepoStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RepoStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_o5_registry_github_v1_repo_proto_enumTypes[0].Descriptor()
}

func (RepoStatus) Type() protoreflect.EnumType {
	return &file_o5_registry_github_v1_repo_proto_enumTypes[0]
}

func (x RepoStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RepoStatus.Descriptor instead.
func (RepoStatus) EnumDescriptor() ([]byte, []int) {
	return file_o5_registry_github_v1_repo_proto_rawDescGZIP(), []int{0}
}

type RepoKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RepoKeys) Reset() {
	*x = RepoKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_registry_github_v1_repo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoKeys) ProtoMessage() {}

func (x *RepoKeys) ProtoReflect() protoreflect.Message {
	mi := &file_o5_registry_github_v1_repo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoKeys.ProtoReflect.Descriptor instead.
func (*RepoKeys) Descriptor() ([]byte, []int) {
	return file_o5_registry_github_v1_repo_proto_rawDescGZIP(), []int{0}
}

func (x *RepoKeys) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *RepoKeys) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RepoState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *psm_pb.StateMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Keys     *RepoKeys             `protobuf:"bytes,2,opt,name=keys,proto3" json:"keys,omitempty"`
	Status   RepoStatus            `protobuf:"varint,3,opt,name=status,proto3,enum=j5.registry.github.v1.RepoStatus" json:"status,omitempty"`
	Data     *RepoStateData        `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RepoState) Reset() {
	*x = RepoState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_registry_github_v1_repo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoState) ProtoMessage() {}

func (x *RepoState) ProtoReflect() protoreflect.Message {
	mi := &file_o5_registry_github_v1_repo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoState.ProtoReflect.Descriptor instead.
func (*RepoState) Descriptor() ([]byte, []int) {
	return file_o5_registry_github_v1_repo_proto_rawDescGZIP(), []int{1}
}

func (x *RepoState) GetMetadata() *psm_pb.StateMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RepoState) GetKeys() *RepoKeys {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *RepoState) GetStatus() RepoStatus {
	if x != nil {
		return x.Status
	}
	return RepoStatus_REPO_STATUS_UNSPECIFIED
}

func (x *RepoState) GetData() *RepoStateData {
	if x != nil {
		return x.Data
	}
	return nil
}

type RepoStateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChecksEnabled bool      `protobuf:"varint,1,opt,name=checks_enabled,json=checksEnabled,proto3" json:"checks_enabled,omitempty"`
	Branches      []*Branch `protobuf:"bytes,2,rep,name=branches,proto3" json:"branches,omitempty"`
}

func (x *RepoStateData) Reset() {
	*x = RepoStateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_registry_github_v1_repo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoStateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoStateData) ProtoMessage() {}

func (x *RepoStateData) ProtoReflect() protoreflect.Message {
	mi := &file_o5_registry_github_v1_repo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoStateData.ProtoReflect.Descriptor instead.
func (*RepoStateData) Descriptor() ([]byte, []int) {
	return file_o5_registry_github_v1_repo_proto_rawDescGZIP(), []int{2}
}

func (x *RepoStateData) GetChecksEnabled() bool {
	if x != nil {
		return x.ChecksEnabled
	}
	return false
}

func (x *RepoStateData) GetBranches() []*Branch {
	if x != nil {
		return x.Branches
	}
	return nil
}

type RepoEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *psm_pb.EventMetadata `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Keys     *RepoKeys             `protobuf:"bytes,2,opt,name=keys,proto3" json:"keys,omitempty"`
	Event    *RepoEventType        `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *RepoEvent) Reset() {
	*x = RepoEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_registry_github_v1_repo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoEvent) ProtoMessage() {}

func (x *RepoEvent) ProtoReflect() protoreflect.Message {
	mi := &file_o5_registry_github_v1_repo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoEvent.ProtoReflect.Descriptor instead.
func (*RepoEvent) Descriptor() ([]byte, []int) {
	return file_o5_registry_github_v1_repo_proto_rawDescGZIP(), []int{3}
}

func (x *RepoEvent) GetMetadata() *psm_pb.EventMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RepoEvent) GetKeys() *RepoKeys {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *RepoEvent) GetEvent() *RepoEventType {
	if x != nil {
		return x.Event
	}
	return nil
}

type RepoEventType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*RepoEventType_Configure_
	//	*RepoEventType_ConfigureBranch_
	//	*RepoEventType_RemoveBranch_
	Type isRepoEventType_Type `protobuf_oneof:"type"`
}

func (x *RepoEventType) Reset() {
	*x = RepoEventType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_registry_github_v1_repo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoEventType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoEventType) ProtoMessage() {}

func (x *RepoEventType) ProtoReflect() protoreflect.Message {
	mi := &file_o5_registry_github_v1_repo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoEventType.ProtoReflect.Descriptor instead.
func (*RepoEventType) Descriptor() ([]byte, []int) {
	return file_o5_registry_github_v1_repo_proto_rawDescGZIP(), []int{4}
}

func (m *RepoEventType) GetType() isRepoEventType_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *RepoEventType) GetConfigure() *RepoEventType_Configure {
	if x, ok := x.GetType().(*RepoEventType_Configure_); ok {
		return x.Configure
	}
	return nil
}

func (x *RepoEventType) GetConfigureBranch() *RepoEventType_ConfigureBranch {
	if x, ok := x.GetType().(*RepoEventType_ConfigureBranch_); ok {
		return x.ConfigureBranch
	}
	return nil
}

func (x *RepoEventType) GetRemoveBranch() *RepoEventType_RemoveBranch {
	if x, ok := x.GetType().(*RepoEventType_RemoveBranch_); ok {
		return x.RemoveBranch
	}
	return nil
}

type isRepoEventType_Type interface {
	isRepoEventType_Type()
}

type RepoEventType_Configure_ struct {
	Configure *RepoEventType_Configure `protobuf:"bytes,1,opt,name=configure,proto3,oneof"`
}

type RepoEventType_ConfigureBranch_ struct {
	ConfigureBranch *RepoEventType_ConfigureBranch `protobuf:"bytes,2,opt,name=configure_branch,json=configureBranch,proto3,oneof"`
}

type RepoEventType_RemoveBranch_ struct {
	RemoveBranch *RepoEventType_RemoveBranch `protobuf:"bytes,3,opt,name=remove_branch,json=removeBranch,proto3,oneof"`
}

func (*RepoEventType_Configure_) isRepoEventType_Type() {}

func (*RepoEventType_ConfigureBranch_) isRepoEventType_Type() {}

func (*RepoEventType_RemoveBranch_) isRepoEventType_Type() {}

type Branch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchName    string              `protobuf:"bytes,1,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	DeployTargets []*DeployTargetType `protobuf:"bytes,2,rep,name=deploy_targets,json=deployTargets,proto3" json:"deploy_targets,omitempty"`
}

func (x *Branch) Reset() {
	*x = Branch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_registry_github_v1_repo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Branch) ProtoMessage() {}

func (x *Branch) ProtoReflect() protoreflect.Message {
	mi := &file_o5_registry_github_v1_repo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Branch.ProtoReflect.Descriptor instead.
func (*Branch) Descriptor() ([]byte, []int) {
	return file_o5_registry_github_v1_repo_proto_rawDescGZIP(), []int{5}
}

func (x *Branch) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *Branch) GetDeployTargets() []*DeployTargetType {
	if x != nil {
		return x.DeployTargets
	}
	return nil
}

type DeployTargetType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*DeployTargetType_J5Build_
	//	*DeployTargetType_O5Build_
	Type isDeployTargetType_Type `protobuf_oneof:"type"`
}

func (x *DeployTargetType) Reset() {
	*x = DeployTargetType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_registry_github_v1_repo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployTargetType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployTargetType) ProtoMessage() {}

func (x *DeployTargetType) ProtoReflect() protoreflect.Message {
	mi := &file_o5_registry_github_v1_repo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployTargetType.ProtoReflect.Descriptor instead.
func (*DeployTargetType) Descriptor() ([]byte, []int) {
	return file_o5_registry_github_v1_repo_proto_rawDescGZIP(), []int{6}
}

func (m *DeployTargetType) GetType() isDeployTargetType_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *DeployTargetType) GetJ5Build() *DeployTargetType_J5Build {
	if x, ok := x.GetType().(*DeployTargetType_J5Build_); ok {
		return x.J5Build
	}
	return nil
}

func (x *DeployTargetType) GetO5Build() *DeployTargetType_O5Build {
	if x, ok := x.GetType().(*DeployTargetType_O5Build_); ok {
		return x.O5Build
	}
	return nil
}

type isDeployTargetType_Type interface {
	isDeployTargetType_Type()
}

type DeployTargetType_J5Build_ struct {
	J5Build *DeployTargetType_J5Build `protobuf:"bytes,1,opt,name=j5_build,json=j5Build,proto3,oneof"`
}

type DeployTargetType_O5Build_ struct {
	O5Build *DeployTargetType_O5Build `protobuf:"bytes,2,opt,name=o5_build,json=o5Build,proto3,oneof"`
}

func (*DeployTargetType_J5Build_) isDeployTargetType_Type() {}

func (*DeployTargetType_O5Build_) isDeployTargetType_Type() {}

type RepoEventType_Configure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Enables Github Build Check Runs for the repo. Token must have write access.
	ChecksEnabled bool `protobuf:"varint,1,opt,name=checks_enabled,json=checksEnabled,proto3" json:"checks_enabled,omitempty"`
	// True: adds any config to existing config, False: Replaces all configs.
	Merge    bool      `protobuf:"varint,2,opt,name=merge,proto3" json:"merge,omitempty"`
	Branches []*Branch `protobuf:"bytes,3,rep,name=branches,proto3" json:"branches,omitempty"`
}

func (x *RepoEventType_Configure) Reset() {
	*x = RepoEventType_Configure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_registry_github_v1_repo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoEventType_Configure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoEventType_Configure) ProtoMessage() {}

func (x *RepoEventType_Configure) ProtoReflect() protoreflect.Message {
	mi := &file_o5_registry_github_v1_repo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoEventType_Configure.ProtoReflect.Descriptor instead.
func (*RepoEventType_Configure) Descriptor() ([]byte, []int) {
	return file_o5_registry_github_v1_repo_proto_rawDescGZIP(), []int{4, 0}
}

func (x *RepoEventType_Configure) GetChecksEnabled() bool {
	if x != nil {
		return x.ChecksEnabled
	}
	return false
}

func (x *RepoEventType_Configure) GetMerge() bool {
	if x != nil {
		return x.Merge
	}
	return false
}

func (x *RepoEventType_Configure) GetBranches() []*Branch {
	if x != nil {
		return x.Branches
	}
	return nil
}

type RepoEventType_ConfigureBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Branch *Branch `protobuf:"bytes,1,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (x *RepoEventType_ConfigureBranch) Reset() {
	*x = RepoEventType_ConfigureBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_registry_github_v1_repo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoEventType_ConfigureBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoEventType_ConfigureBranch) ProtoMessage() {}

func (x *RepoEventType_ConfigureBranch) ProtoReflect() protoreflect.Message {
	mi := &file_o5_registry_github_v1_repo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoEventType_ConfigureBranch.ProtoReflect.Descriptor instead.
func (*RepoEventType_ConfigureBranch) Descriptor() ([]byte, []int) {
	return file_o5_registry_github_v1_repo_proto_rawDescGZIP(), []int{4, 1}
}

func (x *RepoEventType_ConfigureBranch) GetBranch() *Branch {
	if x != nil {
		return x.Branch
	}
	return nil
}

type RepoEventType_RemoveBranch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchName string `protobuf:"bytes,1,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
}

func (x *RepoEventType_RemoveBranch) Reset() {
	*x = RepoEventType_RemoveBranch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_registry_github_v1_repo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoEventType_RemoveBranch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoEventType_RemoveBranch) ProtoMessage() {}

func (x *RepoEventType_RemoveBranch) ProtoReflect() protoreflect.Message {
	mi := &file_o5_registry_github_v1_repo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoEventType_RemoveBranch.ProtoReflect.Descriptor instead.
func (*RepoEventType_RemoveBranch) Descriptor() ([]byte, []int) {
	return file_o5_registry_github_v1_repo_proto_rawDescGZIP(), []int{4, 2}
}

func (x *RepoEventType_RemoveBranch) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

type DeployTargetType_J5Build struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeployTargetType_J5Build) Reset() {
	*x = DeployTargetType_J5Build{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_registry_github_v1_repo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployTargetType_J5Build) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployTargetType_J5Build) ProtoMessage() {}

func (x *DeployTargetType_J5Build) ProtoReflect() protoreflect.Message {
	mi := &file_o5_registry_github_v1_repo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployTargetType_J5Build.ProtoReflect.Descriptor instead.
func (*DeployTargetType_J5Build) Descriptor() ([]byte, []int) {
	return file_o5_registry_github_v1_repo_proto_rawDescGZIP(), []int{6, 0}
}

type DeployTargetType_O5Build struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Environment string `protobuf:"bytes,1,opt,name=environment,proto3" json:"environment,omitempty"`
}

func (x *DeployTargetType_O5Build) Reset() {
	*x = DeployTargetType_O5Build{}
	if protoimpl.UnsafeEnabled {
		mi := &file_o5_registry_github_v1_repo_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployTargetType_O5Build) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployTargetType_O5Build) ProtoMessage() {}

func (x *DeployTargetType_O5Build) ProtoReflect() protoreflect.Message {
	mi := &file_o5_registry_github_v1_repo_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployTargetType_O5Build.ProtoReflect.Descriptor instead.
func (*DeployTargetType_O5Build) Descriptor() ([]byte, []int) {
	return file_o5_registry_github_v1_repo_proto_rawDescGZIP(), []int{6, 1}
}

func (x *DeployTargetType_O5Build) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

var File_o5_registry_github_v1_repo_proto protoreflect.FileDescriptor

var file_o5_registry_github_v1_repo_proto_rawDesc = []byte{
	0x0a, 0x20, 0x6f, 0x35, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x15, 0x6f, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6a, 0x35, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x6a, 0x35, 0x2f, 0x65, 0x78, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x70, 0x73, 0x6d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5f,
	0x0a, 0x08, 0x52, 0x65, 0x70, 0x6f, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0xea, 0x85, 0x8f, 0x02, 0x02, 0x08, 0x01, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x21, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0xea, 0x85, 0x8f, 0x02, 0x02, 0x08, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x3a, 0x0b, 0xea, 0x85, 0x8f, 0x02, 0x06, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x22,
	0xa1, 0x02, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x73, 0x6d, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b,
	0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f,
	0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x4b, 0x65, 0x79, 0x73, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x5c, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6f, 0x35,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x21,
	0x8a, 0xf7, 0x98, 0xc6, 0x02, 0x1b, 0xa2, 0x01, 0x18, 0x52, 0x16, 0x08, 0x01, 0x12, 0x12, 0x52,
	0x45, 0x50, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56,
	0x45, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x35, 0x2e, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x70, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x71, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x08, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6f, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x52, 0x08, 0x62, 0x72,
	0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x22, 0xcd, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6f, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x73, 0x6d, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6f, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f,
	0x4b, 0x65, 0x79, 0x73, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x12, 0x42, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52,
	0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xc9, 0x04, 0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x35,
	0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x12, 0x61, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x58, 0x0a, 0x0d, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x1a, 0x8b, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x65,
	0x72, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x12, 0x41, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x65, 0x73, 0x1a, 0x50, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x3d, 0x0a, 0x06, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x79, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x06, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x1a, 0x37, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x27, 0x0a, 0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x92, 0xf7, 0x98, 0xc6, 0x02, 0x04, 0x52, 0x02,
	0x08, 0x01, 0x22, 0x89, 0x01, 0x0a, 0x06, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x12, 0x27, 0x0a,
	0x0b, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x56, 0x0a, 0x0e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6f, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52,
	0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22, 0xee,
	0x01, 0x0a, 0x10, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x6a, 0x35, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4a,
	0x35, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x48, 0x00, 0x52, 0x07, 0x6a, 0x35, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x12, 0x4c, 0x0a, 0x08, 0x6f, 0x35, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6f, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x4f, 0x35, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x35, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x1a,
	0x09, 0x0a, 0x07, 0x4a, 0x35, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x1a, 0x2b, 0x0a, 0x07, 0x4f, 0x35,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x2a,
	0x41, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x17, 0x52, 0x45, 0x50, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45,
	0x50, 0x4f, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45,
	0x10, 0x01, 0x42, 0x4a, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x65, 0x6e, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x79, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6f,
	0x35, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_o5_registry_github_v1_repo_proto_rawDescOnce sync.Once
	file_o5_registry_github_v1_repo_proto_rawDescData = file_o5_registry_github_v1_repo_proto_rawDesc
)

func file_o5_registry_github_v1_repo_proto_rawDescGZIP() []byte {
	file_o5_registry_github_v1_repo_proto_rawDescOnce.Do(func() {
		file_o5_registry_github_v1_repo_proto_rawDescData = protoimpl.X.CompressGZIP(file_o5_registry_github_v1_repo_proto_rawDescData)
	})
	return file_o5_registry_github_v1_repo_proto_rawDescData
}

var file_o5_registry_github_v1_repo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_o5_registry_github_v1_repo_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_o5_registry_github_v1_repo_proto_goTypes = []interface{}{
	(RepoStatus)(0),                       // 0: j5.registry.github.v1.RepoStatus
	(*RepoKeys)(nil),                      // 1: j5.registry.github.v1.RepoKeys
	(*RepoState)(nil),                     // 2: j5.registry.github.v1.RepoState
	(*RepoStateData)(nil),                 // 3: j5.registry.github.v1.RepoStateData
	(*RepoEvent)(nil),                     // 4: j5.registry.github.v1.RepoEvent
	(*RepoEventType)(nil),                 // 5: j5.registry.github.v1.RepoEventType
	(*Branch)(nil),                        // 6: j5.registry.github.v1.Branch
	(*DeployTargetType)(nil),              // 7: j5.registry.github.v1.DeployTargetType
	(*RepoEventType_Configure)(nil),       // 8: j5.registry.github.v1.RepoEventType.Configure
	(*RepoEventType_ConfigureBranch)(nil), // 9: j5.registry.github.v1.RepoEventType.ConfigureBranch
	(*RepoEventType_RemoveBranch)(nil),    // 10: j5.registry.github.v1.RepoEventType.RemoveBranch
	(*DeployTargetType_J5Build)(nil),      // 11: j5.registry.github.v1.DeployTargetType.J5Build
	(*DeployTargetType_O5Build)(nil),      // 12: j5.registry.github.v1.DeployTargetType.O5Build
	(*psm_pb.StateMetadata)(nil),          // 13: psm.state.v1.StateMetadata
	(*psm_pb.EventMetadata)(nil),          // 14: psm.state.v1.EventMetadata
}
var file_o5_registry_github_v1_repo_proto_depIdxs = []int32{
	13, // 0: j5.registry.github.v1.RepoState.metadata:type_name -> psm.state.v1.StateMetadata
	1,  // 1: j5.registry.github.v1.RepoState.keys:type_name -> j5.registry.github.v1.RepoKeys
	0,  // 2: j5.registry.github.v1.RepoState.status:type_name -> j5.registry.github.v1.RepoStatus
	3,  // 3: j5.registry.github.v1.RepoState.data:type_name -> j5.registry.github.v1.RepoStateData
	6,  // 4: j5.registry.github.v1.RepoStateData.branches:type_name -> j5.registry.github.v1.Branch
	14, // 5: j5.registry.github.v1.RepoEvent.metadata:type_name -> psm.state.v1.EventMetadata
	1,  // 6: j5.registry.github.v1.RepoEvent.keys:type_name -> j5.registry.github.v1.RepoKeys
	5,  // 7: j5.registry.github.v1.RepoEvent.event:type_name -> j5.registry.github.v1.RepoEventType
	8,  // 8: j5.registry.github.v1.RepoEventType.configure:type_name -> j5.registry.github.v1.RepoEventType.Configure
	9,  // 9: j5.registry.github.v1.RepoEventType.configure_branch:type_name -> j5.registry.github.v1.RepoEventType.ConfigureBranch
	10, // 10: j5.registry.github.v1.RepoEventType.remove_branch:type_name -> j5.registry.github.v1.RepoEventType.RemoveBranch
	7,  // 11: j5.registry.github.v1.Branch.deploy_targets:type_name -> j5.registry.github.v1.DeployTargetType
	11, // 12: j5.registry.github.v1.DeployTargetType.j5_build:type_name -> j5.registry.github.v1.DeployTargetType.J5Build
	12, // 13: j5.registry.github.v1.DeployTargetType.o5_build:type_name -> j5.registry.github.v1.DeployTargetType.O5Build
	6,  // 14: j5.registry.github.v1.RepoEventType.Configure.branches:type_name -> j5.registry.github.v1.Branch
	6,  // 15: j5.registry.github.v1.RepoEventType.ConfigureBranch.branch:type_name -> j5.registry.github.v1.Branch
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_o5_registry_github_v1_repo_proto_init() }
func file_o5_registry_github_v1_repo_proto_init() {
	if File_o5_registry_github_v1_repo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_o5_registry_github_v1_repo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_registry_github_v1_repo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_registry_github_v1_repo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoStateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_registry_github_v1_repo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_registry_github_v1_repo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoEventType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_registry_github_v1_repo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Branch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_registry_github_v1_repo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployTargetType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_registry_github_v1_repo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoEventType_Configure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_registry_github_v1_repo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoEventType_ConfigureBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_registry_github_v1_repo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoEventType_RemoveBranch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_registry_github_v1_repo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployTargetType_J5Build); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_o5_registry_github_v1_repo_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployTargetType_O5Build); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_o5_registry_github_v1_repo_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*RepoEventType_Configure_)(nil),
		(*RepoEventType_ConfigureBranch_)(nil),
		(*RepoEventType_RemoveBranch_)(nil),
	}
	file_o5_registry_github_v1_repo_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*DeployTargetType_J5Build_)(nil),
		(*DeployTargetType_O5Build_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_o5_registry_github_v1_repo_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_o5_registry_github_v1_repo_proto_goTypes,
		DependencyIndexes: file_o5_registry_github_v1_repo_proto_depIdxs,
		EnumInfos:         file_o5_registry_github_v1_repo_proto_enumTypes,
		MessageInfos:      file_o5_registry_github_v1_repo_proto_msgTypes,
	}.Build()
	File_o5_registry_github_v1_repo_proto = out.File
	file_o5_registry_github_v1_repo_proto_rawDesc = nil
	file_o5_registry_github_v1_repo_proto_goTypes = nil
	file_o5_registry_github_v1_repo_proto_depIdxs = nil
}
