// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: j5/registry/github/v1/topic/webhook.proto

package github_tpb

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/pentops/j5/gen/j5/messaging/v1/messaging_j5pb"
	github_pb "github.com/pentops/registry/gen/j5/registry/github/v1/github_pb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PushMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryId string            `protobuf:"bytes,1,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	Commit     *github_pb.Commit `protobuf:"bytes,2,opt,name=commit,proto3" json:"commit,omitempty"`
	Ref        string            `protobuf:"bytes,3,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *PushMessage) Reset() {
	*x = PushMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_registry_github_v1_topic_webhook_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushMessage) ProtoMessage() {}

func (x *PushMessage) ProtoReflect() protoreflect.Message {
	mi := &file_j5_registry_github_v1_topic_webhook_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushMessage.ProtoReflect.Descriptor instead.
func (*PushMessage) Descriptor() ([]byte, []int) {
	return file_j5_registry_github_v1_topic_webhook_proto_rawDescGZIP(), []int{0}
}

func (x *PushMessage) GetDeliveryId() string {
	if x != nil {
		return x.DeliveryId
	}
	return ""
}

func (x *PushMessage) GetCommit() *github_pb.Commit {
	if x != nil {
		return x.Commit
	}
	return nil
}

func (x *PushMessage) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type CheckSuiteMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryId string                `protobuf:"bytes,1,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	CheckSuite *github_pb.CheckSuite `protobuf:"bytes,2,opt,name=check_suite,json=checkSuite,proto3" json:"check_suite,omitempty"`
	Action     string                `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *CheckSuiteMessage) Reset() {
	*x = CheckSuiteMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_registry_github_v1_topic_webhook_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckSuiteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckSuiteMessage) ProtoMessage() {}

func (x *CheckSuiteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_j5_registry_github_v1_topic_webhook_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckSuiteMessage.ProtoReflect.Descriptor instead.
func (*CheckSuiteMessage) Descriptor() ([]byte, []int) {
	return file_j5_registry_github_v1_topic_webhook_proto_rawDescGZIP(), []int{1}
}

func (x *CheckSuiteMessage) GetDeliveryId() string {
	if x != nil {
		return x.DeliveryId
	}
	return ""
}

func (x *CheckSuiteMessage) GetCheckSuite() *github_pb.CheckSuite {
	if x != nil {
		return x.CheckSuite
	}
	return nil
}

func (x *CheckSuiteMessage) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

type CheckRunMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryId string              `protobuf:"bytes,1,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	CheckRun   *github_pb.CheckRun `protobuf:"bytes,2,opt,name=check_run,json=checkRun,proto3" json:"check_run,omitempty"`
	Action     string              `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *CheckRunMessage) Reset() {
	*x = CheckRunMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_j5_registry_github_v1_topic_webhook_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRunMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRunMessage) ProtoMessage() {}

func (x *CheckRunMessage) ProtoReflect() protoreflect.Message {
	mi := &file_j5_registry_github_v1_topic_webhook_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRunMessage.ProtoReflect.Descriptor instead.
func (*CheckRunMessage) Descriptor() ([]byte, []int) {
	return file_j5_registry_github_v1_topic_webhook_proto_rawDescGZIP(), []int{2}
}

func (x *CheckRunMessage) GetDeliveryId() string {
	if x != nil {
		return x.DeliveryId
	}
	return ""
}

func (x *CheckRunMessage) GetCheckRun() *github_pb.CheckRun {
	if x != nil {
		return x.CheckRun
	}
	return nil
}

func (x *CheckRunMessage) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

var File_j5_registry_github_v1_topic_webhook_proto protoreflect.FileDescriptor

var file_j5_registry_github_v1_topic_webhook_proto_rawDesc = []byte{
	0x0a, 0x29, 0x6a, 0x35, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2f, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x6a, 0x35, 0x2e,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x6a, 0x35, 0x2f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x69, 0x6e, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x6a, 0x35, 0x2f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81,
	0x01, 0x0a, 0x0b, 0x50, 0x75, 0x73, 0x68, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29,
	0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x08, 0xd2, 0xa2, 0xf5, 0xe4, 0x02, 0x02, 0x08, 0x01, 0x52, 0x0a, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6a, 0x35, 0x2e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72,
	0x65, 0x66, 0x22, 0x9a, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x75, 0x69, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xd2,
	0xa2, 0xf5, 0xe4, 0x02, 0x02, 0x08, 0x01, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x75, 0x69,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6a, 0x35, 0x2e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x75, 0x69, 0x74, 0x65, 0x52, 0x0a, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x75, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x92, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x75, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xd2, 0xa2, 0xf5, 0xe4, 0x02, 0x02,
	0x08, 0x01, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x3c,
	0x0a, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6a, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x75, 0x6e, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x75, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0xa0, 0x02, 0x0a, 0x0c, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x4a, 0x0a, 0x04, 0x50, 0x75, 0x73, 0x68, 0x12, 0x28, 0x2e,
	0x6a, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x56, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x75, 0x69, 0x74, 0x65, 0x12,
	0x2e, 0x2e, 0x6a, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x75, 0x69, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x08, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x75, 0x6e, 0x12, 0x2c, 0x2e, 0x6a, 0x35, 0x2e, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x79, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x75, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x1a, 0x18, 0xd2,
	0xa2, 0xf5, 0xe4, 0x02, 0x12, 0x0a, 0x10, 0x0a, 0x0e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2d,
	0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x6e, 0x74, 0x6f, 0x70, 0x73, 0x2f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6a, 0x35, 0x2f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x5f, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_j5_registry_github_v1_topic_webhook_proto_rawDescOnce sync.Once
	file_j5_registry_github_v1_topic_webhook_proto_rawDescData = file_j5_registry_github_v1_topic_webhook_proto_rawDesc
)

func file_j5_registry_github_v1_topic_webhook_proto_rawDescGZIP() []byte {
	file_j5_registry_github_v1_topic_webhook_proto_rawDescOnce.Do(func() {
		file_j5_registry_github_v1_topic_webhook_proto_rawDescData = protoimpl.X.CompressGZIP(file_j5_registry_github_v1_topic_webhook_proto_rawDescData)
	})
	return file_j5_registry_github_v1_topic_webhook_proto_rawDescData
}

var file_j5_registry_github_v1_topic_webhook_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_j5_registry_github_v1_topic_webhook_proto_goTypes = []interface{}{
	(*PushMessage)(nil),          // 0: j5.registry.github.v1.topic.PushMessage
	(*CheckSuiteMessage)(nil),    // 1: j5.registry.github.v1.topic.CheckSuiteMessage
	(*CheckRunMessage)(nil),      // 2: j5.registry.github.v1.topic.CheckRunMessage
	(*github_pb.Commit)(nil),     // 3: j5.registry.github.v1.Commit
	(*github_pb.CheckSuite)(nil), // 4: j5.registry.github.v1.CheckSuite
	(*github_pb.CheckRun)(nil),   // 5: j5.registry.github.v1.CheckRun
	(*emptypb.Empty)(nil),        // 6: google.protobuf.Empty
}
var file_j5_registry_github_v1_topic_webhook_proto_depIdxs = []int32{
	3, // 0: j5.registry.github.v1.topic.PushMessage.commit:type_name -> j5.registry.github.v1.Commit
	4, // 1: j5.registry.github.v1.topic.CheckSuiteMessage.check_suite:type_name -> j5.registry.github.v1.CheckSuite
	5, // 2: j5.registry.github.v1.topic.CheckRunMessage.check_run:type_name -> j5.registry.github.v1.CheckRun
	0, // 3: j5.registry.github.v1.topic.WebhookTopic.Push:input_type -> j5.registry.github.v1.topic.PushMessage
	1, // 4: j5.registry.github.v1.topic.WebhookTopic.CheckSuite:input_type -> j5.registry.github.v1.topic.CheckSuiteMessage
	2, // 5: j5.registry.github.v1.topic.WebhookTopic.CheckRun:input_type -> j5.registry.github.v1.topic.CheckRunMessage
	6, // 6: j5.registry.github.v1.topic.WebhookTopic.Push:output_type -> google.protobuf.Empty
	6, // 7: j5.registry.github.v1.topic.WebhookTopic.CheckSuite:output_type -> google.protobuf.Empty
	6, // 8: j5.registry.github.v1.topic.WebhookTopic.CheckRun:output_type -> google.protobuf.Empty
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_j5_registry_github_v1_topic_webhook_proto_init() }
func file_j5_registry_github_v1_topic_webhook_proto_init() {
	if File_j5_registry_github_v1_topic_webhook_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_j5_registry_github_v1_topic_webhook_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_registry_github_v1_topic_webhook_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckSuiteMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_j5_registry_github_v1_topic_webhook_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRunMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_j5_registry_github_v1_topic_webhook_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_j5_registry_github_v1_topic_webhook_proto_goTypes,
		DependencyIndexes: file_j5_registry_github_v1_topic_webhook_proto_depIdxs,
		MessageInfos:      file_j5_registry_github_v1_topic_webhook_proto_msgTypes,
	}.Build()
	File_j5_registry_github_v1_topic_webhook_proto = out.File
	file_j5_registry_github_v1_topic_webhook_proto_rawDesc = nil
	file_j5_registry_github_v1_topic_webhook_proto_goTypes = nil
	file_j5_registry_github_v1_topic_webhook_proto_depIdxs = nil
}
